module gpce-example

exports
  sorts Definition Statement Expr
  context-free syntax
	ID "(" {Expr ","}* ")" ";"-> Statement {cons("FuncCall")}
	ID ":=" Expr ";"-> Statement {cons("VarAssign")}
	"return" Expr ";"-> Statement {cons("Return")}


	"function" ID "(" ")" "{" Statement* "}" -> Definition {cons("FunctionDecl")}
	
	INT "+" INT -> Expr {cons("Add")}
	ID          -> Expr {cons("VarUse")}
exports

  lexical syntax
    "-"? [0-9]+          -> INT
    [a-zA-Z][a-zA-Z0-9]* -> ID

  lexical restrictions
  
    %% Ensure greedy matching for lexicals
    INT           -/- [0-9]
    ID            -/- [a-zA-Z0-9\_]
    
%% function foo() {
%%   bar := 5 + 6;
%%   print(bar);
%%   return bar;
%% }
